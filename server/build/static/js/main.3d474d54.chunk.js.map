{"version":3,"sources":["../../game-common/dist/index.js","../../game-common/dist/gameConfig.js","components/game/GameSegment.tsx","components/game/ProgressBar.tsx","components/game/ScoreBoard.tsx","components/game/QuestionIndicator.tsx","components/game/QuestionSegment.tsx","services/socket.ts","components/game/Game.tsx","components/game/StartGame.tsx","components/GameView.tsx","components/menu/HostGame.tsx","components/menu/JoinGame.tsx","components/MainMenu.tsx","components/Navbar.tsx","contexts/ToastContext.tsx","services/questions.ts","components/QuestionForm.tsx","components/Toast.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Object","defineProperty","exports","value","TIME_TO_ANSWER_QUESTION","TOTAL_TIME_PER_QUESTION","gameConfig_1","require","enumerable","get","correctStyles","backgroundColor","border","normalStyles","selectedStyles","GameSegment","selectedAnswer","setSelectedAnswer","highlightCorrectAnswer","text","Segment","className","textAlign","size","style","onClick","Header","as","ProgressBar","progress","animated","max","min","now","ScoreBoard","players","showTopThree","correspondingTrophyIcon","index","trophyIcon","Icon","color","name","sortPlayersByScore","playersSorted","sort","a","b","points","filter","player","Container","paddingTop","Table","inverted","padded","Row","HeaderCell","Body","map","Cell","nick","QuestionIndicator","currentQuestion","questionTotal","Array","from","keys","renderedQuestion","disabled","QuestionSegment","question","circular","socket","io","transports","upgrade","autoConnect","reconnection","Game","gameId","gameData","useState","useEffect","emit","content","Grid","columns","container","Column","currentQuestionIndex","questionsTotal","stretched","answers","answer","showCorrectAnswer","correctAnswer","mapAnswerCards","timeLeftToAnswer","StartGame","isHost","handleStartGame","Button","Popup","hoverable","on","trigger","navigator","clipboard","writeText","GameView","setGameData","showGameOver","setShowGameOver","history","useHistory","response","error","alert","message","replace","undefined","once","HostGame","setGameId","setIsHost","setNick","Input","focus","placeholder","onChange","e","target","Divider","push","JoinGame","MainMenu","selectedHost","setSelectedHost","selectedJoin","setSelectedJoin","fluid","Navbar","activeItem","setActiveItem","handleTabClick","tabName","url","Menu","fixed","Item","active","ToastContext","React","createContext","ToggleToastContext","newToastMsg","useToastUpdate","useContext","ToastProvider","children","msg","setMsg","Provider","newMsg","create","newQuestion","request","axios","post","data","QuestionService","QuestionForm","answer_1","setAnswer_1","answer_2","setAnswer_2","answer_3","setAnswer_3","answer_4","setAnswer_4","setCorrectAnswer","difficulty","setDifficult","setQuestion","toastUpdate","handleSubmit","preventDefault","answerOptions","key","position","top","Form","onSubmit","Field","control","label","rows","id","Group","widths","Select","options","of","every","length","type","margin","Toast","toastMsg","showNotification","setTimeout","toast","info","autoClose","closeOnClick","draggable","hideProgressBar","newestOnTop","pauseOnFocusLoss","pauseOnHover","rtl","theme","App","connect","disconnect","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d474d54.chunk.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TIME_TO_ANSWER_QUESTION = exports.TOTAL_TIME_PER_QUESTION = void 0;\r\nvar gameConfig_1 = require(\"./gameConfig\");\r\nObject.defineProperty(exports, \"TOTAL_TIME_PER_QUESTION\", { enumerable: true, get: function () { return gameConfig_1.TOTAL_TIME_PER_QUESTION; } });\r\nObject.defineProperty(exports, \"TIME_TO_ANSWER_QUESTION\", { enumerable: true, get: function () { return gameConfig_1.TIME_TO_ANSWER_QUESTION; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TIME_TO_ANSWER_QUESTION = exports.TOTAL_TIME_PER_QUESTION = void 0;\r\n/**\r\n * Time how long one questions total last\r\n * (including showing correct answer)\r\n * For example: This variable 60 s, timeToAnswerQuestion 50 s --> 10 s\r\n * is correct question showed\r\n * Time in ms\r\n */\r\nexports.TOTAL_TIME_PER_QUESTION = 20 * 1000;\r\n/**\r\n * Time how much user has time to answer\r\n * Time in ms\r\n */\r\nexports.TIME_TO_ANSWER_QUESTION = 15 * 1000;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\n\r\n/** Types */\r\nimport CSS from 'csstype';\r\n\r\n/** UI, CSS */\r\nimport { Header, Segment } from 'semantic-ui-react';\r\n\r\nconst correctStyles: CSS.Properties = {\r\n  backgroundColor: 'green',\r\n  border: 'solid 2px black'\r\n};\r\n\r\nconst normalStyles: CSS.Properties = {\r\n  border: 'solid 2px black'\r\n};\r\n\r\nconst selectedStyles: CSS.Properties = {\r\n  backgroundColor: '#f2711c',\r\n  border: 'solid 2px black'\r\n};\r\n\r\ninterface Props {\r\n  selectedAnswer?: string;\r\n  setSelectedAnswer?: Dispatch<SetStateAction<string>>;\r\n  highlightCorrectAnswer?: boolean;\r\n  text: string;\r\n}\r\n\r\nconst GameSegment: React.FC<Props> = ({\r\n  selectedAnswer,\r\n  setSelectedAnswer,\r\n  highlightCorrectAnswer,\r\n  text\r\n}: Props) => {\r\n  const cardStyle = (): CSS.Properties => {\r\n    if (highlightCorrectAnswer) return correctStyles;\r\n    else return text === selectedAnswer ? selectedStyles : normalStyles;\r\n  };\r\n\r\n  return (\r\n    <Segment\r\n      className={'text-card'}\r\n      textAlign={'center'}\r\n      size={'large'}\r\n      style={cardStyle()}\r\n      onClick={() => setSelectedAnswer && setSelectedAnswer(text)}\r\n    >\r\n      <Header as={'h3'}>\r\n        <p>{text}</p>\r\n      </Header>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default GameSegment;\r\n","import React from 'react';\r\n\r\n/** CSS, UI */\r\nimport BootStrapProgress from 'react-bootstrap/ProgressBar';\r\n\r\n/** Const(s) */\r\nimport { TIME_TO_ANSWER_QUESTION } from 'game-common';\r\n\r\ninterface Props {\r\n  /** Time left to answer in ms */\r\n  progress: number;\r\n}\r\n\r\nconst ProgressBar: React.FC<Props> = ({ progress }: Props) => {\r\n  return (\r\n    <BootStrapProgress\r\n      animated\r\n      /** Looks smoother when correct answer\r\n       *  doesn't pop immediately after progress\r\n       *  reach zero\r\n       */\r\n      max={TIME_TO_ANSWER_QUESTION}\r\n      min={1 * 1000}\r\n      now={progress}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\n\r\n/** CSS, UI */\r\nimport { Container, Icon, Table } from 'semantic-ui-react';\r\n\r\n/** Types */\r\nimport { Player } from 'game-common';\r\n\r\ninterface Props {\r\n  players: Player[];\r\n  showTopThree?: boolean;\r\n}\r\n\r\nconst ScoreBoard: React.FC<Props> = ({\r\n  players,\r\n  showTopThree = false\r\n}: Props) => {\r\n  const correspondingTrophyIcon = (index: number): JSX.Element | null => {\r\n    const trophyIcon = 'trophy';\r\n\r\n    switch (index) {\r\n      case 0:\r\n        return <Icon color={'yellow'} name={trophyIcon} />;\r\n\r\n      case 1:\r\n        return <Icon color={'grey'} name={trophyIcon} />;\r\n\r\n      case 2:\r\n        return <Icon color={'brown'} name={trophyIcon} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const mapPlayerScores = (): JSX.Element[] =>\r\n    sortPlayersByScore().map((player: Player, index: number) => (\r\n      <Table.Row key={index} style={{ backgroundColor: 'black' }}>\r\n        <Table.Cell>\r\n          {`${index + 1}.`} {correspondingTrophyIcon(index)}\r\n        </Table.Cell>\r\n        <Table.Cell>{player.nick}</Table.Cell>\r\n        <Table.Cell>{player.points}</Table.Cell>\r\n      </Table.Row>\r\n    ));\r\n\r\n  const sortPlayersByScore = (): Player[] => {\r\n    /** Descending order */\r\n    const playersSorted: Player[] = [...players].sort((a, b) =>\r\n      a.points > b.points ? -1 : b.points > a.points ? 1 : 0\r\n    );\r\n\r\n    return showTopThree\r\n      ? playersSorted.filter((player: Player, index: number) => index <= 2)\r\n      : playersSorted;\r\n  };\r\n\r\n  return (\r\n    <Container style={{ paddingTop: '8em' }}>\r\n      <Table\r\n        inverted\r\n        padded\r\n        size={'large'}\r\n        style={{ border: '1px solid whitesmoke' }}\r\n      >\r\n        <Table.Header style={{ backgroundColor: '#f2711c' }}>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Position</Table.HeaderCell>\r\n            <Table.HeaderCell>Player</Table.HeaderCell>\r\n            <Table.HeaderCell>Points</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>{mapPlayerScores()}</Table.Body>\r\n      </Table>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ScoreBoard;\r\n","import React from 'react';\r\n\r\n/** Css, UI */\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  currentQuestion: number;\r\n  questionTotal: number;\r\n}\r\n\r\nconst QuestionIndicator: React.FC<Props> = ({\r\n  currentQuestion,\r\n  questionTotal\r\n}: Props) => {\r\n  return (\r\n    <>\r\n      {/** Create array of numbers [0, 1, 2, 3, ...questionTotal] */}\r\n\r\n      {Array.from(Array(questionTotal).keys()).map(\r\n        (renderedQuestion: number) => (\r\n          <Icon\r\n            key={renderedQuestion}\r\n            color={'orange'}\r\n            disabled={renderedQuestion > currentQuestion}\r\n            name={'question'}\r\n            size={'big'}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionIndicator;\r\n","import React from 'react';\r\n\r\nimport { Header, Segment } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  question?: string;\r\n}\r\n\r\nconst QuestionSegment: React.FC<Props> = ({ question }: Props) => (\r\n  <Segment circular size={'large'}>\r\n    <Header as={'h1'}>{question || ''}</Header>\r\n  </Segment>\r\n);\r\n\r\nexport default QuestionSegment;\r\n","import { io } from 'socket.io-client';\r\n\r\n/** In package.json proxy -> localhost:8080 */\r\nexport const LOCALHOST = '';\r\nexport const socket = io(LOCALHOST, {\r\n  /** Can't DDoS with F5  */\r\n  transports: ['websocket'],\r\n  upgrade: false,\r\n  autoConnect: false,\r\n  reconnection: false,\r\n});","import React, { useEffect, useState } from 'react';\r\n\r\n/** Components */\r\nimport GameSegment from './GameSegment';\r\nimport ProgressBar from './ProgressBar';\r\nimport ScoreBoard from './ScoreBoard';\r\nimport QuestionIndicator from './QuestionIndicator';\r\nimport QuestionSegment from './QuestionSegment';\r\n\r\n/** Css UI */\r\nimport { Container, Grid, Header } from 'semantic-ui-react';\r\nimport '../../styles/GameView.css';\r\n\r\n/** Types, Config, Socket */\r\nimport { GameData } from 'game-common';\r\nimport { socket } from '../../services/socket';\r\n\r\ninterface Props {\r\n  gameId: string;\r\n  nick: string;\r\n  gameData: GameData;\r\n}\r\n\r\nconst Game: React.FC<Props> = ({ gameId, nick, gameData }: Props) => {\r\n  const [selectedAnswer, setSelectedAnswer] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    socket.emit('selected-answer', selectedAnswer, gameId, nick);\r\n  });\r\n\r\n  const mapAnswerCards = (): JSX.Element[] => {\r\n    return gameData?.currentQuestion?.answers.map(\r\n      (answer: string, index: number) => (\r\n        <Grid.Column stretched columns={1} key={index}>\r\n          <GameSegment\r\n            selectedAnswer={selectedAnswer}\r\n            setSelectedAnswer={setSelectedAnswer}\r\n            text={answer}\r\n            highlightCorrectAnswer={\r\n              /** Highlight correct answer */\r\n              gameData.showCorrectAnswer &&\r\n              answer === gameData.currentQuestion.correctAnswer\r\n            }\r\n          />\r\n        </Grid.Column>\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header as={'h1'} content={gameId} inverted />\r\n      <Grid columns={1} className=\"game-view-content\" container>\r\n        <Grid.Column>\r\n          <QuestionIndicator\r\n            currentQuestion={gameData.currentQuestionIndex}\r\n            questionTotal={gameData.questionsTotal}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column stretched={true}>\r\n          <QuestionSegment\r\n            question={gameData.currentQuestion?.question || ''}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>{mapAnswerCards()}</Grid.Column>\r\n        <Grid.Column>\r\n          <ProgressBar progress={gameData.timeLeftToAnswer} />\r\n        </Grid.Column>\r\n      </Grid>\r\n\r\n      <ScoreBoard players={gameData.players} showTopThree />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\n/** CSS, UI */\r\nimport { Button, Container, Popup } from 'semantic-ui-react';\r\nimport '../../styles/StartGame.css';\r\n\r\ninterface Props {\r\n  gameId: string;\r\n  isHost: boolean;\r\n  handleStartGame: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst StartGame: React.FC<Props> = ({\r\n  gameId,\r\n  isHost,\r\n  handleStartGame\r\n}: Props) => {\r\n  return (\r\n    <Container className={'start-game-container'}>\r\n      <div className={'text-container'}>\r\n        <p className={'waiting-text'}>Waiting for the game to begin</p>\r\n        <p className={'game-id-text'}>{gameId}</p>\r\n      </div>\r\n\r\n      <div className={'buttons-row'}>\r\n        {isHost && (\r\n          <Button content={'START'} size={'big'} onClick={handleStartGame} />\r\n        )}\r\n        <Popup\r\n          content={'Game ID copied'}\r\n          hoverable\r\n          size={'large'}\r\n          on={'click'}\r\n          trigger={\r\n            <Button\r\n              content={'Copy ID'}\r\n              size={'big'}\r\n              onClick={() => navigator.clipboard.writeText(gameId)}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default StartGame;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/** Components */\r\nimport Game from './game/Game';\r\nimport ScoreBoard from './game/ScoreBoard';\r\nimport StartGame from './game/StartGame';\r\n\r\n/** UI, CSS */\r\nimport '../styles/GameView.css';\r\n\r\n/** Socket */\r\nimport { socket } from '../services/socket';\r\n\r\n/** Types */\r\nimport { GameData } from 'game-common';\r\n\r\ninterface Props {\r\n  gameId: string;\r\n  isHost: boolean;\r\n  nick: string;\r\n}\r\n\r\nconst GameView: React.FC<Props> = ({ gameId, isHost, nick }: Props) => {\r\n  const [gameData, setGameData] = useState<GameData>();\r\n  const [showGameOver, setShowGameOver] = useState<boolean>(false);\r\n\r\n  const history = useHistory();\r\n\r\n  /** Try to connect to game on initialize render */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n    socket.emit('join-game', nick, gameId, isHost, (response: any) => {\r\n      if (response.error) {\r\n        alert(response.message);\r\n        history.replace('/');\r\n      }\r\n      return () => {\r\n        setShowGameOver(false);\r\n        setGameData(undefined);\r\n      };\r\n    });\r\n  }, [gameId, history, isHost, nick]);\r\n\r\n  socket.on('game-data', (gameData: GameData) => setGameData(gameData));\r\n  socket.once('game-over', (gameData: GameData) => {\r\n    setGameData(gameData);\r\n    setShowGameOver(true);\r\n  });\r\n\r\n  const handleStartGame = (): void => {\r\n    socket.emit('start-game', gameId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showGameOver ? (\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        <ScoreBoard players={gameData!.players} />\r\n      ) : !gameData ? (\r\n        <StartGame\r\n          gameId={gameId}\r\n          isHost={isHost}\r\n          handleStartGame={handleStartGame}\r\n        />\r\n      ) : (\r\n        <Game gameId={gameId} nick={nick} gameData={gameData} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameView;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/** CSS, UI */\r\nimport { Button, Divider, Input } from 'semantic-ui-react';\r\n\r\nimport { socket } from '../../services/socket';\r\n\r\ninterface Props {\r\n  nick: string;\r\n  setGameId: Dispatch<SetStateAction<string>>;\r\n  setIsHost: Dispatch<SetStateAction<boolean>>;\r\n  setNick: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst HostGame: React.FC<Props> = ({\r\n  nick,\r\n  setGameId,\r\n  setIsHost,\r\n  setNick\r\n}: Props) => {\r\n  const history = useHistory();\r\n\r\n  const initializeHostGame = (): void => {\r\n    // eslint-disable-next-line\r\n    socket.emit('host-game', (response: any) => {\r\n      setGameId(response.gameId as string);\r\n      setIsHost(true);\r\n      setNick(nick);\r\n      history.push('/game');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Input\r\n        focus\r\n        placeholder=\"Username\"\r\n        value={nick}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          setNick(e.target.value)\r\n        }\r\n      />\r\n\r\n      <Divider />\r\n\r\n      <Button\r\n        className=\"button\"\r\n        content={'HOST'}\r\n        color={'orange'}\r\n        disabled={!nick}\r\n        size={'massive'}\r\n        onClick={initializeHostGame}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HostGame;\r\n","import React, { Dispatch, SetStateAction } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/** CSS, UI */\r\nimport { Button, Divider, Input } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  gameId: string;\r\n  nick: string;\r\n  setGameId: Dispatch<SetStateAction<string>>;\r\n  setIsHost: Dispatch<SetStateAction<boolean>>;\r\n  setNick: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst JoinGame: React.FC<Props> = ({\r\n  gameId,\r\n  nick,\r\n  setGameId,\r\n  setIsHost,\r\n  setNick\r\n}: Props) => {\r\n  const history = useHistory();\r\n\r\n  const joinHostedGame = (): void => {\r\n    history.push('/game');\r\n    setIsHost(false);\r\n    setNick(nick);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider />\r\n\r\n      <Input\r\n        focus\r\n        placeholder=\"Username\"\r\n        value={nick}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          setNick(e.target.value)\r\n        }\r\n      />\r\n\r\n      <Divider />\r\n\r\n      <Input\r\n        focus\r\n        placeholder={'Game ID'}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          setGameId(e.target.value)\r\n        }\r\n      />\r\n\r\n      <Divider />\r\n\r\n      <Button\r\n        className=\"button\"\r\n        color={'orange'}\r\n        content={'JOIN'}\r\n        disabled={!gameId || !nick}\r\n        size={'massive'}\r\n        onClick={joinHostedGame}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JoinGame;\r\n","import React, { Dispatch, SetStateAction, useState } from 'react';\r\n\r\n/** Components */\r\nimport HostGame from './menu/HostGame';\r\nimport JoinGame from './menu/JoinGame';\r\n\r\n/** CSS, UI */\r\nimport { Button, Container, Divider, Header } from 'semantic-ui-react';\r\nimport '../styles/MainMenu.css';\r\n\r\ninterface Props {\r\n  gameId: string;\r\n  nick: string;\r\n  setIsHost: Dispatch<SetStateAction<boolean>>;\r\n  setGameId: Dispatch<SetStateAction<string>>;\r\n  setNick: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst MainMenu: React.FC<Props> = ({\r\n  gameId,\r\n  nick,\r\n  setIsHost,\r\n  setGameId,\r\n  setNick\r\n}: Props) => {\r\n  const [selectedHost, setSelectedHost] = useState<boolean>(false);\r\n  const [selectedJoin, setSelectedJoin] = useState<boolean>(false);\r\n\r\n  return (\r\n    <Container className=\"main-menu-content\" fluid={false} textAlign={'center'}>\r\n      {!selectedHost && !selectedJoin && (\r\n        <Header\r\n          as={'h1'}\r\n          content={'MAIN MENU'}\r\n          color={'orange'}\r\n          size={'huge'}\r\n        />\r\n      )}\r\n\r\n      {!selectedJoin && (\r\n        <Button\r\n          className=\"button\"\r\n          content={selectedHost ? 'CANCEL' : 'HOST'}\r\n          size={'massive'}\r\n          onClick={() => {\r\n            setSelectedHost(!selectedHost);\r\n            setGameId('');\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {selectedHost && (\r\n        <>\r\n          <Divider />\r\n          <HostGame\r\n            nick={nick}\r\n            setGameId={setGameId}\r\n            setIsHost={setIsHost}\r\n            setNick={setNick}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {!selectedHost && (\r\n        <Button\r\n          className=\"button\"\r\n          content={selectedJoin ? 'CANCEL' : 'JOIN'}\r\n          size={'massive'}\r\n          onClick={() => setSelectedJoin(!selectedJoin)}\r\n        />\r\n      )}\r\n\r\n      {selectedJoin && (\r\n        <JoinGame\r\n          gameId={gameId}\r\n          nick={nick}\r\n          setGameId={setGameId}\r\n          setIsHost={setIsHost}\r\n          setNick={setNick}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/** CSS, UI */\r\nimport { Menu } from 'semantic-ui-react';\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [activeItem, setActiveItem] = useState<string>('home');\r\n\r\n  const history = useHistory();\r\n\r\n  const handleTabClick = (tabName: string, url: string): void => {\r\n    setActiveItem(tabName);\r\n    history.push(url);\r\n  };\r\n\r\n  return (\r\n    <Menu inverted fixed={'top'} size={'huge'}>\r\n      <Menu.Item\r\n        name={'home'}\r\n        active={activeItem === 'home'}\r\n        content={'Home'}\r\n        onClick={() => handleTabClick('home', '/')}\r\n      />\r\n      <Menu.Item\r\n        name={'add_question'}\r\n        active={activeItem === 'add_question'}\r\n        content={'Add Question'}\r\n        onClick={() => handleTabClick('add_question', 'addquestion')}\r\n      />\r\n      <Menu.Item\r\n        name={'browse_questions'}\r\n        active={activeItem === 'browse_questions'}\r\n        content={'Browse questions'}\r\n        /* Grey color indicate disabled tab */\r\n        style={{ color: '#484848' }}\r\n      />\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { createContext, useContext, useState } from 'react';\r\n\r\n/** Default values */\r\n// Toast message\r\nconst ToastContext = React.createContext('');\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst ToggleToastContext = createContext((newToastMsg: string) => {});\r\n\r\n/** Custom hooks */\r\nexport const useToast = (): string => useContext(ToastContext);\r\nexport const useToastUpdate = (): ((newToastMsg: string) => void) =>\r\n  useContext(ToggleToastContext);\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ToastProvider: React.FC<Props> = ({ children }: Props) => {\r\n  const [msg, setMsg] = useState<string>('');\r\n\r\n  const toggleToast = (newMsg: string): void => setMsg(newMsg);\r\n\r\n  return (\r\n    <ToastContext.Provider value={msg}>\r\n      <ToggleToastContext.Provider value={toggleToast}>\r\n        {children}\r\n      </ToggleToastContext.Provider>\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ToastProvider;\r\n","import axios from 'axios'\r\n\r\n/** Types */\r\nimport { Question } from 'game-common';\r\n\r\nconst BASE_URL = 'api/questions';\r\n\r\nconst create = async (newQuestion: Question): Promise<string> => {\r\n  const request = axios.post(BASE_URL, newQuestion);\r\n  const response = await request;\r\n  return response.data;\r\n}\r\n\r\nconst QuestionService = {\r\n  create\r\n};\r\n\r\nexport default QuestionService;\r\n \r\n\r\n","import React, { useState } from 'react';\r\n\r\n/** Toast update-hook */\r\nimport { useToastUpdate } from '../contexts/ToastContext';\r\n\r\n/** CSS, UI */\r\nimport { Button, Container, Form, Segment } from 'semantic-ui-react';\r\n\r\n/** Types */\r\nimport { Question, Difficulty } from 'game-common';\r\n\r\n/** Services */\r\nimport QuestionService from '../services/questions';\r\n\r\nconst QuestionForm: React.FC = () => {\r\n  const [answer_1, setAnswer_1] = useState<string>('');\r\n  const [answer_2, setAnswer_2] = useState<string>('');\r\n  const [answer_3, setAnswer_3] = useState<string>('');\r\n  const [answer_4, setAnswer_4] = useState<string>('');\r\n  const [correctAnswer, setCorrectAnswer] = useState<string>('');\r\n  const [difficulty, setDifficult] = useState<Difficulty>('easy');\r\n  const [question, setQuestion] = useState<string>('');\r\n\r\n  const toastUpdate: (newMsg: string) => void = useToastUpdate();\r\n\r\n  const answersAreValid = (): boolean =>\r\n    Array.of(answer_1, answer_2, answer_3, answer_4).every(\r\n      (answer: string) => answer.length\r\n    );\r\n\r\n  const clearStates = (): void => {\r\n    setAnswer_1('');\r\n    setAnswer_2('');\r\n    setAnswer_3('');\r\n    setAnswer_4('');\r\n    setDifficult('easy');\r\n    setCorrectAnswer('');\r\n    setQuestion('');\r\n  };\r\n\r\n  const handleSubmit = async (\r\n    e: React.FormEvent<HTMLFormElement>\r\n  ): Promise<void> => {\r\n    e.preventDefault();\r\n\r\n    const newQuestion: Question = {\r\n      answers: [answer_1, answer_2, answer_3, answer_4],\r\n      correctAnswer: correctAnswer,\r\n      difficulty: difficulty,\r\n      question: question\r\n    };\r\n\r\n    try {\r\n      await QuestionService.create(newQuestion);\r\n      clearStates();\r\n      toastUpdate('Question added!');\r\n    } catch (e) {\r\n      toastUpdate('Error on adding question');\r\n    }\r\n  };\r\n\r\n  const answerOptions = [\r\n    { key: '1', text: 'Answer 1', value: answer_1 },\r\n    { key: '2', text: 'Answer 2', value: answer_2 },\r\n    { key: '3', text: 'Answer 3', value: answer_3 },\r\n    { key: '4', text: 'Answer 4', value: answer_4 }\r\n  ];\r\n\r\n  const difficultyOptions = [\r\n    { key: '1', text: 'Easy', value: 'easy' },\r\n    { key: '2', text: 'Medium', value: 'medium' },\r\n    { key: '3', text: 'Hard', value: 'hard' }\r\n  ];\r\n\r\n  return (\r\n    <Container\r\n      style={{\r\n        backgroundColor: '#1b1c1d',\r\n        border: '3px solid #f2711c',\r\n        position: 'relative',\r\n        top: '5em'\r\n      }}\r\n    >\r\n      <Segment inverted style={{ paddingTop: '2em' }}>\r\n        <Form inverted size={'huge'} onSubmit={handleSubmit}>\r\n          <Form.Field\r\n            control={'textarea'}\r\n            label={'Question'}\r\n            rows={'2'}\r\n            id=\"questionInput\"\r\n            value={question}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setQuestion(e.target.value)\r\n            }\r\n          />\r\n\r\n          <Form.Group widths={'equal'}>\r\n            <Form.Field\r\n              control={'input'}\r\n              label={'Answer 1'}\r\n              rows={'2'}\r\n              id=\"answer1\"\r\n              value={answer_1}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setAnswer_1(e.target.value)\r\n              }\r\n            />\r\n            <Form.Field\r\n              control={'input'}\r\n              label={'Answer 2'}\r\n              rows={'2'}\r\n              id=\"answer2\"\r\n              value={answer_2}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setAnswer_2(e.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group widths={'equal'}>\r\n            <Form.Field\r\n              control={'input'}\r\n              label={'Answer 3'}\r\n              rows={'2'}\r\n              id=\"answer3\"\r\n              value={answer_3}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setAnswer_3(e.target.value)\r\n              }\r\n            />\r\n            <Form.Field\r\n              control={'input'}\r\n              label={'Answer 4'}\r\n              rows={'2'}\r\n              id=\"answer4\"\r\n              value={answer_4}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                setAnswer_4(e.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group style={{ paddingTop: '1em' }} widths={'equal'}>\r\n            <Form.Select\r\n              rows={'2'}\r\n              label=\"Pick correct answer\"\r\n              id=\"correctAnswer\"\r\n              options={answerOptions}\r\n              onChange={(e, { value }) => setCorrectAnswer(value as string)}\r\n            />\r\n            <Form.Select\r\n              rows={'2'}\r\n              label=\"Pick difficulty\"\r\n              id=\"difficulty\"\r\n              options={difficultyOptions}\r\n              onChange={(e, { value }) => setDifficult(value as Difficulty)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button\r\n            disabled={\r\n              !answersAreValid() || !difficulty || !question || !correctAnswer\r\n            }\r\n            type={'submit'}\r\n            style={{ margin: '1em' }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n/** Toast context / custom hooks */\r\nimport { useToast, useToastUpdate } from '../contexts/ToastContext';\r\n\r\nconst Toast: React.FC = () => {\r\n  const toastMsg: string = useToast();\r\n  const toastUpdate: (newMsg: string) => void = useToastUpdate();\r\n\r\n  useEffect(() => {\r\n    toastMsg && showNotification(toastMsg);\r\n    /** Set msg immediately empty, so next prop changes trigger toast,\r\n     even if toast message is same as previous */\r\n    setTimeout(() => {\r\n      toastUpdate('');\r\n    }, 5 * 1000);\r\n  });\r\n\r\n  const showNotification = (message: string) =>\r\n    toast.info(message, { style: { border: '1px solid white' } });\r\n\r\n  return (\r\n    <ToastContainer\r\n      autoClose={3000}\r\n      closeOnClick\r\n      draggable={false}\r\n      hideProgressBar\r\n      newestOnTop={false}\r\n      pauseOnFocusLoss\r\n      pauseOnHover\r\n      position={'bottom-center'}\r\n      rtl={false}\r\n      theme={'dark'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\n/** Components */\r\nimport GameView from './GameView';\r\nimport MainMenu from './MainMenu';\r\nimport Navbar from './Navbar';\r\nimport QuestionForm from './QuestionForm';\r\nimport Toast from './Toast';\r\n\r\n/** CSS, UI */\r\nimport '../styles/App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n/** Socket */\r\nimport { socket } from '../services/socket';\r\n\r\nconst App: React.FC = () => {\r\n  const [nick, setNick] = useState<string>('');\r\n  const [gameId, setGameId] = useState<string>('');\r\n  const [isHost, setIsHost] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    socket.connect();\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <MainMenu\r\n              gameId={gameId}\r\n              nick={nick}\r\n              setNick={setNick}\r\n              setGameId={setGameId}\r\n              setIsHost={setIsHost}\r\n            />\r\n          </Route>\r\n          <Route path=\"/game\">\r\n            <GameView gameId={gameId} isHost={isHost} nick={nick} />\r\n          </Route>\r\n          <Route path=\"/addquestion\">\r\n            <QuestionForm />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      <Toast />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ToastProvider from './contexts/ToastContext';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ToastProvider>\r\n      <App />\r\n    </ToastProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}